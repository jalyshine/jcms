<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jaly.vote.dao.VoteMapper">
  <resultMap id="BaseResultMap" type="cn.jaly.vote.entity.Vote">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="credit_point" jdbcType="INTEGER" property="creditPoint" />
    <result column="from_time" jdbcType="TIMESTAMP" property="fromTime" />
    <result column="to_time" jdbcType="TIMESTAMP" property="toTime" />
    <result column="interval_days" jdbcType="SMALLINT" property="intervalDays" />
    <result column="max_val" jdbcType="SMALLINT" property="maxVal" />
    <result column="min_val" jdbcType="SMALLINT" property="minVal" />
    <result column="disabled" jdbcType="BIT" property="disabled" />
    <result column="is_multiple" jdbcType="BIT" property="isMultiple" />
    <result column="allow_guest" jdbcType="BIT" property="allowGuest" />
    <result column="allow_view" jdbcType="BIT" property="allowView" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="site_id" jdbcType="INTEGER" property="siteId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.jaly.vote.entity.Vote">
    <result column="items" jdbcType="LONGVARCHAR" property="items" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, description, credit_point, from_time, to_time, interval_days, max_val, 
    min_val, disabled, is_multiple, allow_guest, allow_view, update_time, site_id
  </sql>
  <sql id="Blob_Column_List">
    items
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.jaly.vote.entity.VoteExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from vote
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.jaly.vote.entity.VoteExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from vote
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from vote
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from vote
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jaly.vote.entity.VoteExample">
    delete from vote
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jaly.vote.entity.Vote">
    insert into vote (id, title, description, 
      credit_point, from_time, to_time, 
      interval_days, max_val, min_val, 
      disabled, is_multiple, allow_guest, 
      allow_view, update_time, site_id, 
      items)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{creditPoint,jdbcType=INTEGER}, #{fromTime,jdbcType=TIMESTAMP}, #{toTime,jdbcType=TIMESTAMP}, 
      #{intervalDays,jdbcType=SMALLINT}, #{maxVal,jdbcType=SMALLINT}, #{minVal,jdbcType=SMALLINT}, 
      #{disabled,jdbcType=BIT}, #{isMultiple,jdbcType=BIT}, #{allowGuest,jdbcType=BIT}, 
      #{allowView,jdbcType=BIT}, #{updateTime,jdbcType=TIMESTAMP}, #{siteId,jdbcType=INTEGER}, 
      #{items,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.jaly.vote.entity.Vote">
    insert into vote
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="creditPoint != null">
        credit_point,
      </if>
      <if test="fromTime != null">
        from_time,
      </if>
      <if test="toTime != null">
        to_time,
      </if>
      <if test="intervalDays != null">
        interval_days,
      </if>
      <if test="maxVal != null">
        max_val,
      </if>
      <if test="minVal != null">
        min_val,
      </if>
      <if test="disabled != null">
        disabled,
      </if>
      <if test="isMultiple != null">
        is_multiple,
      </if>
      <if test="allowGuest != null">
        allow_guest,
      </if>
      <if test="allowView != null">
        allow_view,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="siteId != null">
        site_id,
      </if>
      <if test="items != null">
        items,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="creditPoint != null">
        #{creditPoint,jdbcType=INTEGER},
      </if>
      <if test="fromTime != null">
        #{fromTime,jdbcType=TIMESTAMP},
      </if>
      <if test="toTime != null">
        #{toTime,jdbcType=TIMESTAMP},
      </if>
      <if test="intervalDays != null">
        #{intervalDays,jdbcType=SMALLINT},
      </if>
      <if test="maxVal != null">
        #{maxVal,jdbcType=SMALLINT},
      </if>
      <if test="minVal != null">
        #{minVal,jdbcType=SMALLINT},
      </if>
      <if test="disabled != null">
        #{disabled,jdbcType=BIT},
      </if>
      <if test="isMultiple != null">
        #{isMultiple,jdbcType=BIT},
      </if>
      <if test="allowGuest != null">
        #{allowGuest,jdbcType=BIT},
      </if>
      <if test="allowView != null">
        #{allowView,jdbcType=BIT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="siteId != null">
        #{siteId,jdbcType=INTEGER},
      </if>
      <if test="items != null">
        #{items,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jaly.vote.entity.VoteExample" resultType="java.lang.Long">
    select count(*) from vote
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update vote
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.creditPoint != null">
        credit_point = #{record.creditPoint,jdbcType=INTEGER},
      </if>
      <if test="record.fromTime != null">
        from_time = #{record.fromTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.toTime != null">
        to_time = #{record.toTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.intervalDays != null">
        interval_days = #{record.intervalDays,jdbcType=SMALLINT},
      </if>
      <if test="record.maxVal != null">
        max_val = #{record.maxVal,jdbcType=SMALLINT},
      </if>
      <if test="record.minVal != null">
        min_val = #{record.minVal,jdbcType=SMALLINT},
      </if>
      <if test="record.disabled != null">
        disabled = #{record.disabled,jdbcType=BIT},
      </if>
      <if test="record.isMultiple != null">
        is_multiple = #{record.isMultiple,jdbcType=BIT},
      </if>
      <if test="record.allowGuest != null">
        allow_guest = #{record.allowGuest,jdbcType=BIT},
      </if>
      <if test="record.allowView != null">
        allow_view = #{record.allowView,jdbcType=BIT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.siteId != null">
        site_id = #{record.siteId,jdbcType=INTEGER},
      </if>
      <if test="record.items != null">
        items = #{record.items,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update vote
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      credit_point = #{record.creditPoint,jdbcType=INTEGER},
      from_time = #{record.fromTime,jdbcType=TIMESTAMP},
      to_time = #{record.toTime,jdbcType=TIMESTAMP},
      interval_days = #{record.intervalDays,jdbcType=SMALLINT},
      max_val = #{record.maxVal,jdbcType=SMALLINT},
      min_val = #{record.minVal,jdbcType=SMALLINT},
      disabled = #{record.disabled,jdbcType=BIT},
      is_multiple = #{record.isMultiple,jdbcType=BIT},
      allow_guest = #{record.allowGuest,jdbcType=BIT},
      allow_view = #{record.allowView,jdbcType=BIT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      site_id = #{record.siteId,jdbcType=INTEGER},
      items = #{record.items,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update vote
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      credit_point = #{record.creditPoint,jdbcType=INTEGER},
      from_time = #{record.fromTime,jdbcType=TIMESTAMP},
      to_time = #{record.toTime,jdbcType=TIMESTAMP},
      interval_days = #{record.intervalDays,jdbcType=SMALLINT},
      max_val = #{record.maxVal,jdbcType=SMALLINT},
      min_val = #{record.minVal,jdbcType=SMALLINT},
      disabled = #{record.disabled,jdbcType=BIT},
      is_multiple = #{record.isMultiple,jdbcType=BIT},
      allow_guest = #{record.allowGuest,jdbcType=BIT},
      allow_view = #{record.allowView,jdbcType=BIT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      site_id = #{record.siteId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jaly.vote.entity.Vote">
    update vote
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="creditPoint != null">
        credit_point = #{creditPoint,jdbcType=INTEGER},
      </if>
      <if test="fromTime != null">
        from_time = #{fromTime,jdbcType=TIMESTAMP},
      </if>
      <if test="toTime != null">
        to_time = #{toTime,jdbcType=TIMESTAMP},
      </if>
      <if test="intervalDays != null">
        interval_days = #{intervalDays,jdbcType=SMALLINT},
      </if>
      <if test="maxVal != null">
        max_val = #{maxVal,jdbcType=SMALLINT},
      </if>
      <if test="minVal != null">
        min_val = #{minVal,jdbcType=SMALLINT},
      </if>
      <if test="disabled != null">
        disabled = #{disabled,jdbcType=BIT},
      </if>
      <if test="isMultiple != null">
        is_multiple = #{isMultiple,jdbcType=BIT},
      </if>
      <if test="allowGuest != null">
        allow_guest = #{allowGuest,jdbcType=BIT},
      </if>
      <if test="allowView != null">
        allow_view = #{allowView,jdbcType=BIT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="siteId != null">
        site_id = #{siteId,jdbcType=INTEGER},
      </if>
      <if test="items != null">
        items = #{items,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.jaly.vote.entity.Vote">
    update vote
    set title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      credit_point = #{creditPoint,jdbcType=INTEGER},
      from_time = #{fromTime,jdbcType=TIMESTAMP},
      to_time = #{toTime,jdbcType=TIMESTAMP},
      interval_days = #{intervalDays,jdbcType=SMALLINT},
      max_val = #{maxVal,jdbcType=SMALLINT},
      min_val = #{minVal,jdbcType=SMALLINT},
      disabled = #{disabled,jdbcType=BIT},
      is_multiple = #{isMultiple,jdbcType=BIT},
      allow_guest = #{allowGuest,jdbcType=BIT},
      allow_view = #{allowView,jdbcType=BIT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      site_id = #{siteId,jdbcType=INTEGER},
      items = #{items,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jaly.vote.entity.Vote">
    update vote
    set title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      credit_point = #{creditPoint,jdbcType=INTEGER},
      from_time = #{fromTime,jdbcType=TIMESTAMP},
      to_time = #{toTime,jdbcType=TIMESTAMP},
      interval_days = #{intervalDays,jdbcType=SMALLINT},
      max_val = #{maxVal,jdbcType=SMALLINT},
      min_val = #{minVal,jdbcType=SMALLINT},
      disabled = #{disabled,jdbcType=BIT},
      is_multiple = #{isMultiple,jdbcType=BIT},
      allow_guest = #{allowGuest,jdbcType=BIT},
      allow_view = #{allowView,jdbcType=BIT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      site_id = #{siteId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>