<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jaly.admin.dao.ModuleMapper">
  <resultMap id="BaseResultMap" type="cn.jaly.admin.entity.Module">
    <id column="module" jdbcType="VARCHAR" property="module" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="is_core" jdbcType="BIT" property="isCore" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="list_order" jdbcType="INTEGER" property="listOrder" />
    <result column="disabled" jdbcType="BIT" property="disabled" />
    <result column="install_time" jdbcType="TIMESTAMP" property="installTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.jaly.admin.entity.Module">
    <result column="setting" jdbcType="LONGVARCHAR" property="setting" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    module, name, url, is_core, version, description, list_order, disabled, install_time, 
    update_time
  </sql>
  <sql id="Blob_Column_List">
    setting
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.jaly.admin.entity.ModuleExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from module
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.jaly.admin.entity.ModuleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from module
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from module
    where module = #{module,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from module
    where module = #{module,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jaly.admin.entity.ModuleExample">
    delete from module
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jaly.admin.entity.Module">
    insert into module (module, name, url, 
      is_core, version, description, 
      list_order, disabled, install_time, 
      update_time, setting)
    values (#{module,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{isCore,jdbcType=BIT}, #{version,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{listOrder,jdbcType=INTEGER}, #{disabled,jdbcType=BIT}, #{installTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{setting,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.jaly.admin.entity.Module">
    insert into module
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="module != null">
        module,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="isCore != null">
        is_core,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="listOrder != null">
        list_order,
      </if>
      <if test="disabled != null">
        disabled,
      </if>
      <if test="installTime != null">
        install_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="setting != null">
        setting,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="module != null">
        #{module,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="isCore != null">
        #{isCore,jdbcType=BIT},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="listOrder != null">
        #{listOrder,jdbcType=INTEGER},
      </if>
      <if test="disabled != null">
        #{disabled,jdbcType=BIT},
      </if>
      <if test="installTime != null">
        #{installTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="setting != null">
        #{setting,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jaly.admin.entity.ModuleExample" resultType="java.lang.Long">
    select count(*) from module
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update module
    <set>
      <if test="record.module != null">
        module = #{record.module,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.isCore != null">
        is_core = #{record.isCore,jdbcType=BIT},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.listOrder != null">
        list_order = #{record.listOrder,jdbcType=INTEGER},
      </if>
      <if test="record.disabled != null">
        disabled = #{record.disabled,jdbcType=BIT},
      </if>
      <if test="record.installTime != null">
        install_time = #{record.installTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.setting != null">
        setting = #{record.setting,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update module
    set module = #{record.module,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      is_core = #{record.isCore,jdbcType=BIT},
      version = #{record.version,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      list_order = #{record.listOrder,jdbcType=INTEGER},
      disabled = #{record.disabled,jdbcType=BIT},
      install_time = #{record.installTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      setting = #{record.setting,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update module
    set module = #{record.module,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      is_core = #{record.isCore,jdbcType=BIT},
      version = #{record.version,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      list_order = #{record.listOrder,jdbcType=INTEGER},
      disabled = #{record.disabled,jdbcType=BIT},
      install_time = #{record.installTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jaly.admin.entity.Module">
    update module
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="isCore != null">
        is_core = #{isCore,jdbcType=BIT},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="listOrder != null">
        list_order = #{listOrder,jdbcType=INTEGER},
      </if>
      <if test="disabled != null">
        disabled = #{disabled,jdbcType=BIT},
      </if>
      <if test="installTime != null">
        install_time = #{installTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="setting != null">
        setting = #{setting,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where module = #{module,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.jaly.admin.entity.Module">
    update module
    set name = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      is_core = #{isCore,jdbcType=BIT},
      version = #{version,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      list_order = #{listOrder,jdbcType=INTEGER},
      disabled = #{disabled,jdbcType=BIT},
      install_time = #{installTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      setting = #{setting,jdbcType=LONGVARCHAR}
    where module = #{module,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jaly.admin.entity.Module">
    update module
    set name = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      is_core = #{isCore,jdbcType=BIT},
      version = #{version,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      list_order = #{listOrder,jdbcType=INTEGER},
      disabled = #{disabled,jdbcType=BIT},
      install_time = #{installTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where module = #{module,jdbcType=VARCHAR}
  </update>
</mapper>