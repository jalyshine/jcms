<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jaly.member.dao.MemberMapper">
  <resultMap id="BaseResultMap" type="cn.jaly.member.entity.Member">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="encrypt" jdbcType="VARCHAR" property="encrypt" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="reg_time" jdbcType="TIMESTAMP" property="regTime" />
    <result column="reg_ip" jdbcType="VARCHAR" property="regIp" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="last_login_ip" jdbcType="VARCHAR" property="lastLoginIp" />
    <result column="login_times" jdbcType="INTEGER" property="loginTimes" />
    <result column="has_message" jdbcType="BIT" property="hasMessage" />
    <result column="is_lock" jdbcType="BIT" property="isLock" />
    <result column="vip_level" jdbcType="TINYINT" property="vipLevel" />
    <result column="vip_over_time" jdbcType="TIMESTAMP" property="vipOverTime" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="point" jdbcType="INTEGER" property="point" />
    <result column="member_group_id" jdbcType="INTEGER" property="memberGroupId" />
    <result column="site_id" jdbcType="INTEGER" property="siteId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_name, password, encrypt, email, phone, reg_time, reg_ip, last_login_time, 
    last_login_ip, login_times, has_message, is_lock, vip_level, vip_over_time, amount, 
    point, member_group_id, site_id
  </sql>
  <select id="selectByExample" parameterType="cn.jaly.member.entity.MemberExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from member
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jaly.member.entity.MemberExample">
    delete from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jaly.member.entity.Member">
    insert into member (id, user_name, password, 
      encrypt, email, phone, 
      reg_time, reg_ip, last_login_time, 
      last_login_ip, login_times, has_message, 
      is_lock, vip_level, vip_over_time, 
      amount, point, member_group_id, 
      site_id)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{encrypt,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{regTime,jdbcType=TIMESTAMP}, #{regIp,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP}, 
      #{lastLoginIp,jdbcType=VARCHAR}, #{loginTimes,jdbcType=INTEGER}, #{hasMessage,jdbcType=BIT}, 
      #{isLock,jdbcType=BIT}, #{vipLevel,jdbcType=TINYINT}, #{vipOverTime,jdbcType=TIMESTAMP}, 
      #{amount,jdbcType=DOUBLE}, #{point,jdbcType=INTEGER}, #{memberGroupId,jdbcType=INTEGER}, 
      #{siteId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.jaly.member.entity.Member">
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="encrypt != null">
        encrypt,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="regTime != null">
        reg_time,
      </if>
      <if test="regIp != null">
        reg_ip,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="lastLoginIp != null">
        last_login_ip,
      </if>
      <if test="loginTimes != null">
        login_times,
      </if>
      <if test="hasMessage != null">
        has_message,
      </if>
      <if test="isLock != null">
        is_lock,
      </if>
      <if test="vipLevel != null">
        vip_level,
      </if>
      <if test="vipOverTime != null">
        vip_over_time,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="point != null">
        point,
      </if>
      <if test="memberGroupId != null">
        member_group_id,
      </if>
      <if test="siteId != null">
        site_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="encrypt != null">
        #{encrypt,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null">
        #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="regIp != null">
        #{regIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null">
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginTimes != null">
        #{loginTimes,jdbcType=INTEGER},
      </if>
      <if test="hasMessage != null">
        #{hasMessage,jdbcType=BIT},
      </if>
      <if test="isLock != null">
        #{isLock,jdbcType=BIT},
      </if>
      <if test="vipLevel != null">
        #{vipLevel,jdbcType=TINYINT},
      </if>
      <if test="vipOverTime != null">
        #{vipOverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="point != null">
        #{point,jdbcType=INTEGER},
      </if>
      <if test="memberGroupId != null">
        #{memberGroupId,jdbcType=INTEGER},
      </if>
      <if test="siteId != null">
        #{siteId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jaly.member.entity.MemberExample" resultType="java.lang.Long">
    select count(*) from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update member
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.encrypt != null">
        encrypt = #{record.encrypt,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.regTime != null">
        reg_time = #{record.regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.regIp != null">
        reg_ip = #{record.regIp,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginTime != null">
        last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastLoginIp != null">
        last_login_ip = #{record.lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.loginTimes != null">
        login_times = #{record.loginTimes,jdbcType=INTEGER},
      </if>
      <if test="record.hasMessage != null">
        has_message = #{record.hasMessage,jdbcType=BIT},
      </if>
      <if test="record.isLock != null">
        is_lock = #{record.isLock,jdbcType=BIT},
      </if>
      <if test="record.vipLevel != null">
        vip_level = #{record.vipLevel,jdbcType=TINYINT},
      </if>
      <if test="record.vipOverTime != null">
        vip_over_time = #{record.vipOverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.point != null">
        point = #{record.point,jdbcType=INTEGER},
      </if>
      <if test="record.memberGroupId != null">
        member_group_id = #{record.memberGroupId,jdbcType=INTEGER},
      </if>
      <if test="record.siteId != null">
        site_id = #{record.siteId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update member
    set id = #{record.id,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      encrypt = #{record.encrypt,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      reg_time = #{record.regTime,jdbcType=TIMESTAMP},
      reg_ip = #{record.regIp,jdbcType=VARCHAR},
      last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      last_login_ip = #{record.lastLoginIp,jdbcType=VARCHAR},
      login_times = #{record.loginTimes,jdbcType=INTEGER},
      has_message = #{record.hasMessage,jdbcType=BIT},
      is_lock = #{record.isLock,jdbcType=BIT},
      vip_level = #{record.vipLevel,jdbcType=TINYINT},
      vip_over_time = #{record.vipOverTime,jdbcType=TIMESTAMP},
      amount = #{record.amount,jdbcType=DOUBLE},
      point = #{record.point,jdbcType=INTEGER},
      member_group_id = #{record.memberGroupId,jdbcType=INTEGER},
      site_id = #{record.siteId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jaly.member.entity.Member">
    update member
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="encrypt != null">
        encrypt = #{encrypt,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="regTime != null">
        reg_time = #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="regIp != null">
        reg_ip = #{regIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null">
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="loginTimes != null">
        login_times = #{loginTimes,jdbcType=INTEGER},
      </if>
      <if test="hasMessage != null">
        has_message = #{hasMessage,jdbcType=BIT},
      </if>
      <if test="isLock != null">
        is_lock = #{isLock,jdbcType=BIT},
      </if>
      <if test="vipLevel != null">
        vip_level = #{vipLevel,jdbcType=TINYINT},
      </if>
      <if test="vipOverTime != null">
        vip_over_time = #{vipOverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="point != null">
        point = #{point,jdbcType=INTEGER},
      </if>
      <if test="memberGroupId != null">
        member_group_id = #{memberGroupId,jdbcType=INTEGER},
      </if>
      <if test="siteId != null">
        site_id = #{siteId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jaly.member.entity.Member">
    update member
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      encrypt = #{encrypt,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      reg_time = #{regTime,jdbcType=TIMESTAMP},
      reg_ip = #{regIp,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      login_times = #{loginTimes,jdbcType=INTEGER},
      has_message = #{hasMessage,jdbcType=BIT},
      is_lock = #{isLock,jdbcType=BIT},
      vip_level = #{vipLevel,jdbcType=TINYINT},
      vip_over_time = #{vipOverTime,jdbcType=TIMESTAMP},
      amount = #{amount,jdbcType=DOUBLE},
      point = #{point,jdbcType=INTEGER},
      member_group_id = #{memberGroupId,jdbcType=INTEGER},
      site_id = #{siteId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--自定义-->
  <resultMap id="WithGroupResultMap" type="cn.jaly.member.entity.Member" extends="BaseResultMap">
    <association property="memberGroup" javaType="cn.jaly.member.entity.MemberGroup">
      <id column="id" jdbcType="INTEGER" property="id" />
      <result column="name" jdbcType="VARCHAR" property="name" />
      <result column="is_core" jdbcType="BIT" property="isCore" />
      <result column="star_num" jdbcType="TINYINT" property="starNum" />
      <result column="max_point" jdbcType="INTEGER" property="maxPoint" />
      <result column="member_count" jdbcType="INTEGER" property="memberCount" />
      <result column="allow_send_message" jdbcType="BIT" property="allowSendMessage" />
      <result column="allow_message_num" jdbcType="INTEGER" property="allowMessageNum" />
      <result column="allow_visit" jdbcType="BIT" property="allowVisit" />
      <result column="allow_post" jdbcType="BIT" property="allowPost" />
      <result column="allow_post_verify" jdbcType="BIT" property="allowPostVerify" />
      <result column="allow_post_num" jdbcType="INTEGER" property="allowPostNum" />
      <result column="allow_search" jdbcType="BIT" property="allowSearch" />
      <result column="allow_upload" jdbcType="BIT" property="allowUpload" />
      <result column="allow_upgrade" jdbcType="BIT" property="allowUpgrade" />
      <result column="price_day" jdbcType="DOUBLE" property="priceDay" />
      <result column="price_month" jdbcType="DOUBLE" property="priceMonth" />
      <result column="price_year" jdbcType="DOUBLE" property="priceYear" />
      <result column="icon" jdbcType="VARCHAR" property="icon" />
      <result column="user_name_color" jdbcType="VARCHAR" property="userNameColor" />
      <result column="description" jdbcType="VARCHAR" property="description" />
      <result column="list_order" jdbcType="INTEGER" property="listOrder" />
      <result column="disabled" jdbcType="BIT" property="disabled" />
      <result column="site_id" jdbcType="INTEGER" property="siteId" />
    </association>
  </resultMap>
  <sql id="With_Group_Column_List">
    m.id, user_name, password, encrypt, email, phone, reg_time, reg_ip, last_login_time,
    last_login_ip, login_times, has_message, is_lock, vip_level, vip_over_time, amount,
    point, member_group_id, m.site_id,
    g.id, g.name, is_core, star_num, max_point, member_count, allow_send_message, allow_message_num,
    allow_visit, allow_post, allow_post_verify, allow_post_num, allow_search, allow_upload,
    allow_upgrade, price_day, price_month, price_year, icon, user_name_color, description,
    list_order, disabled, g.site_id
  </sql>
  <select id="selectWithGroup" resultMap="WithGroupResultMap">
    select
    <include refid="With_Group_Column_List" />
    from member m left join member_group g on m.member_group_id = g.id
    where m.site_id = #{site, jdbcType=INTEGER}
    <if test="isLock != null">
      and is_lock = #{isLock, jdbcType=BIT}
    </if>
    <if test="group != null">
      and g.id = #{group, jdbcType=INTEGER}
    </if>
    <if test="start!=null">
      and reg_time &gt;= #{start,jdbcType=TIMESTAMP}
    </if>
    <if test="end!=null">
      and reg_time &lt;= #{end,jdbcType=TIMESTAMP}
    </if>
    <if test="keyword != null and keyword != ''">
      and (user_name like #{keyword} or phone like #{keyword})
    </if>
    <if test="order != null and order != ''">
      order by ${order}
    </if>
  </select>
</mapper>