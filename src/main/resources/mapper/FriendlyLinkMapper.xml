<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jaly.link.dao.FriendlyLinkMapper">
  <resultMap id="BaseResultMap" type="cn.jaly.link.entity.FriendlyLink">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="link_from" jdbcType="TINYINT" property="linkFrom" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="logo" jdbcType="VARCHAR" property="logo" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="elite" jdbcType="BIT" property="elite" />
    <result column="passed" jdbcType="BIT" property="passed" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="site_id" jdbcType="INTEGER" property="siteId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, link_from, name, url, logo, description, user_name, phone, elite, passed, update_time, 
    type_id, site_id
  </sql>
  <select id="selectByExample" parameterType="cn.jaly.link.entity.FriendlyLinkExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from friendly_link
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from friendly_link
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from friendly_link
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jaly.link.entity.FriendlyLinkExample">
    delete from friendly_link
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jaly.link.entity.FriendlyLink">
    insert into friendly_link (id, link_from, name, 
      url, logo, description, 
      user_name, phone, elite, 
      passed, update_time, type_id, 
      site_id)
    values (#{id,jdbcType=INTEGER}, #{linkFrom,jdbcType=TINYINT}, #{name,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{logo,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{elite,jdbcType=BIT}, 
      #{passed,jdbcType=BIT}, #{updateTime,jdbcType=TIMESTAMP}, #{typeId,jdbcType=INTEGER}, 
      #{siteId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.jaly.link.entity.FriendlyLink">
    insert into friendly_link
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="linkFrom != null">
        link_from,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="logo != null">
        logo,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="elite != null">
        elite,
      </if>
      <if test="passed != null">
        passed,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="siteId != null">
        site_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="linkFrom != null">
        #{linkFrom,jdbcType=TINYINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="logo != null">
        #{logo,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="elite != null">
        #{elite,jdbcType=BIT},
      </if>
      <if test="passed != null">
        #{passed,jdbcType=BIT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="siteId != null">
        #{siteId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jaly.link.entity.FriendlyLinkExample" resultType="java.lang.Long">
    select count(*) from friendly_link
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update friendly_link
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.linkFrom != null">
        link_from = #{record.linkFrom,jdbcType=TINYINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.logo != null">
        logo = #{record.logo,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.elite != null">
        elite = #{record.elite,jdbcType=BIT},
      </if>
      <if test="record.passed != null">
        passed = #{record.passed,jdbcType=BIT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.siteId != null">
        site_id = #{record.siteId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update friendly_link
    set id = #{record.id,jdbcType=INTEGER},
      link_from = #{record.linkFrom,jdbcType=TINYINT},
      name = #{record.name,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      logo = #{record.logo,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      elite = #{record.elite,jdbcType=BIT},
      passed = #{record.passed,jdbcType=BIT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      type_id = #{record.typeId,jdbcType=INTEGER},
      site_id = #{record.siteId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jaly.link.entity.FriendlyLink">
    update friendly_link
    <set>
      <if test="linkFrom != null">
        link_from = #{linkFrom,jdbcType=TINYINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="logo != null">
        logo = #{logo,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="elite != null">
        elite = #{elite,jdbcType=BIT},
      </if>
      <if test="passed != null">
        passed = #{passed,jdbcType=BIT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="siteId != null">
        site_id = #{siteId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jaly.link.entity.FriendlyLink">
    update friendly_link
    set link_from = #{linkFrom,jdbcType=TINYINT},
      name = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      logo = #{logo,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      elite = #{elite,jdbcType=BIT},
      passed = #{passed,jdbcType=BIT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      type_id = #{typeId,jdbcType=INTEGER},
      site_id = #{siteId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--自定义-->
  <resultMap id="WithTypeResultMap" type="cn.jaly.link.entity.FriendlyLink" extends="BaseResultMap">
    <id column="f_id" jdbcType="INTEGER" property="id" />
    <result column="f_name" jdbcType="VARCHAR" property="name" />
    <result column="f_description" jdbcType="VARCHAR" property="description" />
    <result column="f_site_id" jdbcType="INTEGER" property="siteId" />
    <association property="friendlyLinkType" javaType="cn.jaly.link.entity.FriendlyLinkType">
      <id column="t_id" jdbcType="INTEGER" property="id" />
      <result column="t_name" jdbcType="VARCHAR" property="name" />
      <result column="t_description" jdbcType="VARCHAR" property="description" />
      <result column="t_site_id" jdbcType="INTEGER" property="siteId" />
    </association>
  </resultMap>
  <sql id="With_Type_Column_List">
    f.id f_id, f.link_from, f.name f_name, f.url, f.logo, f.description f_description,
    f.user_name, f.phone, f.elite, f.passed, f.update_time,
    f.type_id, f.site_id f_site_id, t.id t_id, t.name t_name, t.description t_description, t.site_id t_site_id
  </sql>
  <select id="queryForList" resultMap="WithTypeResultMap">
    select
    <include refid="With_Type_Column_List" />
    from friendly_link f left join friendly_link_type t on f.type_id = t.id
    where f.site_id =  #{siteId, jdbcType=INTEGER}
    <if test="keyword != null and keyword != ''">
      and f_name like #{keyword}
    </if>
    <if test="order != null and order != ''">
      order by ${order}
    </if>
  </select>
</mapper>