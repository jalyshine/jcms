<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jaly.content.dao.AttachIndexMapper">
  <resultMap id="BaseResultMap" type="cn.jaly.content.entity.AttachIndex">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="attachment_id" jdbcType="INTEGER" property="attachmentId" />
    <result column="module" jdbcType="VARCHAR" property="module" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="host" jdbcType="VARCHAR" property="host" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, attachment_id, module, category_id, host
  </sql>
  <select id="selectByExample" parameterType="cn.jaly.content.entity.AttachIndexExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from attach_index
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from attach_index
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from attach_index
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jaly.content.entity.AttachIndexExample">
    delete from attach_index
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jaly.content.entity.AttachIndex">
    insert ignore into attach_index (id, attachment_id, module,
      category_id, host)
    values (#{id,jdbcType=INTEGER}, #{attachmentId,jdbcType=INTEGER}, #{module,jdbcType=VARCHAR}, 
      #{categoryId,jdbcType=INTEGER}, #{host,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.jaly.content.entity.AttachIndex">
    insert ignore into attach_index
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="attachmentId != null">
        attachment_id,
      </if>
      <if test="module != null">
        module,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="host != null">
        host,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="attachmentId != null">
        #{attachmentId,jdbcType=INTEGER},
      </if>
      <if test="module != null">
        #{module,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="host != null">
        #{host,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jaly.content.entity.AttachIndexExample" resultType="java.lang.Long">
    select count(*) from attach_index
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update attach_index
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.attachmentId != null">
        attachment_id = #{record.attachmentId,jdbcType=INTEGER},
      </if>
      <if test="record.module != null">
        module = #{record.module,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.host != null">
        host = #{record.host,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update attach_index
    set id = #{record.id,jdbcType=INTEGER},
      attachment_id = #{record.attachmentId,jdbcType=INTEGER},
      module = #{record.module,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      host = #{record.host,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jaly.content.entity.AttachIndex">
    update attach_index
    <set>
      <if test="attachmentId != null">
        attachment_id = #{attachmentId,jdbcType=INTEGER},
      </if>
      <if test="module != null">
        module = #{module,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="host != null">
        host = #{host,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jaly.content.entity.AttachIndex">
    update attach_index
    set attachment_id = #{attachmentId,jdbcType=INTEGER},
      module = #{module,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      host = #{host,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!--自定义-->
    <insert id="batchInsert" parameterType="cn.jaly.content.entity.AttachIndex">
        insert ignore into attach_index (id, attachment_id, module, category_id, host)
        values
        <foreach collection="records" item="r" separator=",">
            (#{r.id,jdbcType=INTEGER}, #{r.attachmentId,jdbcType=INTEGER}, #{r.module,jdbcType=VARCHAR},
            #{r.categoryId,jdbcType=INTEGER}, #{r.host,jdbcType=VARCHAR})
        </foreach>
    </insert>
</mapper>