<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jaly.content.dao.AttachmentMapper">
    <resultMap id="BaseResultMap" type="cn.jaly.content.entity.Attachment">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="path" jdbcType="VARCHAR" property="path"/>
        <result column="size" jdbcType="FLOAT" property="size"/>
        <result column="downloads" jdbcType="INTEGER" property="downloads"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="is_admin" jdbcType="BIT" property="isAdmin"/>
        <result column="upload_time" jdbcType="TIMESTAMP" property="uploadTime"/>
        <result column="upload_ip" jdbcType="VARCHAR" property="uploadIp"/>
        <result column="status" jdbcType="BIT" property="status"/>
        <result column="auth_code" jdbcType="CHAR" property="authCode"/>
        <result column="site_id" jdbcType="INTEGER" property="siteId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, name, type, path, size, downloads, user_id, is_admin, upload_time, upload_ip, 
    status, auth_code, site_id
  </sql>
    <select id="selectByExample" parameterType="cn.jaly.content.entity.AttachmentExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from attachment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from attachment
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from attachment
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="cn.jaly.content.entity.AttachmentExample">
        delete from attachment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.jaly.content.entity.Attachment">
    insert into attachment (id, name, type, 
      path, size, downloads, 
      user_id, is_admin, upload_time, 
      upload_ip, status, auth_code, 
      site_id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{path,jdbcType=VARCHAR}, #{size,jdbcType=FLOAT}, #{downloads,jdbcType=INTEGER},
      #{userId,jdbcType=INTEGER}, #{isAdmin,jdbcType=BIT}, #{uploadTime,jdbcType=TIMESTAMP}, 
      #{uploadIp,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, #{authCode,jdbcType=CHAR}, 
      #{siteId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="cn.jaly.content.entity.Attachment">
        insert into attachment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="path != null">
                path,
            </if>
            <if test="size != null">
                size,
            </if>
            <if test="downloads != null">
                downloads,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="isAdmin != null">
                is_admin,
            </if>
            <if test="uploadTime != null">
                upload_time,
            </if>
            <if test="uploadIp != null">
                upload_ip,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="authCode != null">
                auth_code,
            </if>
            <if test="siteId != null">
                site_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="path != null">
                #{path,jdbcType=VARCHAR},
            </if>
            <if test="size != null">
                #{size,jdbcType=FLOAT},
            </if>
            <if test="downloads != null">
                #{downloads,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="isAdmin != null">
                #{isAdmin,jdbcType=BIT},
            </if>
            <if test="uploadTime != null">
                #{uploadTime,jdbcType=TIMESTAMP},
            </if>
            <if test="uploadIp != null">
                #{uploadIp,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=BIT},
            </if>
            <if test="authCode != null">
                #{authCode,jdbcType=CHAR},
            </if>
            <if test="siteId != null">
                #{siteId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.jaly.content.entity.AttachmentExample" resultType="java.lang.Long">
        select count(*) from attachment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update attachment
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=VARCHAR},
            </if>
            <if test="record.path != null">
                path = #{record.path,jdbcType=VARCHAR},
            </if>
            <if test="record.size != null">
                size = #{record.size,jdbcType=FLOAT},
            </if>
            <if test="record.downloads != null">
                downloads = #{record.downloads,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.isAdmin != null">
                is_admin = #{record.isAdmin,jdbcType=BIT},
            </if>
            <if test="record.uploadTime != null">
                upload_time = #{record.uploadTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.uploadIp != null">
                upload_ip = #{record.uploadIp,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=BIT},
            </if>
            <if test="record.authCode != null">
                auth_code = #{record.authCode,jdbcType=CHAR},
            </if>
            <if test="record.siteId != null">
                site_id = #{record.siteId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update attachment
        set id = #{record.id,jdbcType=INTEGER},
        name = #{record.name,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=VARCHAR},
        path = #{record.path,jdbcType=VARCHAR},
        size = #{record.size,jdbcType=FLOAT},
        downloads = #{record.downloads,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        is_admin = #{record.isAdmin,jdbcType=BIT},
        upload_time = #{record.uploadTime,jdbcType=TIMESTAMP},
        upload_ip = #{record.uploadIp,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=BIT},
        auth_code = #{record.authCode,jdbcType=CHAR},
        site_id = #{record.siteId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.jaly.content.entity.Attachment">
        update attachment
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="path != null">
                path = #{path,jdbcType=VARCHAR},
            </if>
            <if test="size != null">
                size = #{size,jdbcType=FLOAT},
            </if>
            <if test="downloads != null">
                downloads = #{downloads,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="isAdmin != null">
                is_admin = #{isAdmin,jdbcType=BIT},
            </if>
            <if test="uploadTime != null">
                upload_time = #{uploadTime,jdbcType=TIMESTAMP},
            </if>
            <if test="uploadIp != null">
                upload_ip = #{uploadIp,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=BIT},
            </if>
            <if test="authCode != null">
                auth_code = #{authCode,jdbcType=CHAR},
            </if>
            <if test="siteId != null">
                site_id = #{siteId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.jaly.content.entity.Attachment">
    update attachment
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      size = #{size,jdbcType=FLOAT},
      downloads = #{downloads,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      is_admin = #{isAdmin,jdbcType=BIT},
      upload_time = #{uploadTime,jdbcType=TIMESTAMP},
      upload_ip = #{uploadIp,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      auth_code = #{authCode,jdbcType=CHAR},
      site_id = #{siteId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!--自定义-->
    <resultMap id="WithAllResultMap" type="cn.jaly.content.entity.Attachment" extends="BaseResultMap">
        <id column="a_id" jdbcType="INTEGER" property="id"/>
        <result column="a_name" jdbcType="VARCHAR" property="name"/>
        <result column="a_type" jdbcType="VARCHAR" property="type"/>
        <result column="a_site_id" jdbcType="INTEGER" property="siteId"/>
        <association property="attachIndex" javaType="cn.jaly.content.entity.AttachIndex">
            <id column="i_id" jdbcType="INTEGER" property="id"/>
            <result column="attachment_id" jdbcType="INTEGER" property="attachmentId"/>
            <result column="i_module" jdbcType="VARCHAR" property="module"/>
            <result column="category_id" jdbcType="INTEGER" property="categoryId"/>
            <result column="host" jdbcType="VARCHAR" property="host"/>
            <association property="category" javaType="cn.jaly.content.entity.Category">
                <id column="c_id" jdbcType="INTEGER" property="id"/>
                <result column="c_name" jdbcType="VARCHAR" property="name"/>
                <result column="c_type" jdbcType="TINYINT" property="type"/>
                <result column="banner" jdbcType="VARCHAR" property="banner" />
                <result column="thumb" jdbcType="VARCHAR" property="thumb" />
                <result column="icon" jdbcType="VARCHAR" property="icon" />
                <result column="description" jdbcType="VARCHAR" property="description"/>
                <result column="hits" jdbcType="INTEGER" property="hits"/>
                <result column="list_order" jdbcType="INTEGER" property="listOrder"/>
                <result column="url" jdbcType="VARCHAR" property="url"/>
                <result column="model_id" jdbcType="INTEGER" property="modelId"/>
                <result column="parent_id" jdbcType="INTEGER" property="parentId"/>
                <result column="work_flow_id" jdbcType="INTEGER" property="workFlowId"/>
                <result column="c_site_id" jdbcType="INTEGER" property="siteId"/>
            </association>
        </association>
    </resultMap>
    <sql id="With_All_Column_List">
    a.id a_id, a.name a_name, a.type a_type, a.path, a.size, a.downloads, a.user_id, a.is_admin,
    a.upload_time, a.upload_ip, a.status, a.auth_code, a.site_id a_site_id,
    i.id i_id, i.attachment_id, i.module i_module, i.category_id, i.host,
    c.id c_id, c.name c_name, c.type c_type, c.banner, c.thumb, c.icon, c.description, c.hits, c.list_order,
    c.url, c.model_id, c.parent_id, c.work_flow_id, c.site_id c_site_id
  </sql>
    <select id="queryForList" resultMap="WithAllResultMap">
        select distinct
        <include refid="With_All_Column_List"/>
        from (attachment a left join attach_index i on a.id = i.attachment_id)
        left join category c on i.category_id = c.id
        where a.site_id = #{siteId, jdbcType=INTEGER}
        <if test="name != null and name != ''">
            and a.name like #{name}
        </if>
        <if test="type != null and type != ''">
            and a.type = #{type}
        </if>
        <if test="startTime != null">
            and upload_time &gt;= #{startTime,jdbcType=TIMESTAMP}
        </if>
        <if test="endTime != null">
            and upload_time &lt;= #{endTime,jdbcType=TIMESTAMP}
        </if>
        <if test="order != null and order != ''">
            order by ${order}
        </if>
    </select>
    <insert id="batchInsert" parameterType="cn.jaly.content.entity.Attachment">
        insert into attachment (id, name, type, path, size, downloads,
        user_id, is_admin, upload_time, upload_ip, status, auth_code, site_id)
        values
        <foreach collection="records" item="r" separator=",">
            (#{r.id,jdbcType=INTEGER}, #{r.name,jdbcType=VARCHAR}, #{r.type,jdbcType=VARCHAR},
            #{r.path,jdbcType=VARCHAR}, #{r.size,jdbcType=FLOAT}, #{r.downloads,jdbcType=INTEGER},
            #{r.userId,jdbcType=INTEGER}, #{r.isAdmin,jdbcType=BIT}, #{r.uploadTime,jdbcType=TIMESTAMP},
            #{r.uploadIp,jdbcType=VARCHAR}, #{r.status,jdbcType=BIT}, #{r.authCode,jdbcType=CHAR},
            #{r.siteId,jdbcType=INTEGER})
        </foreach>
    </insert>
</mapper>