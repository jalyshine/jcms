<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jaly.admin.dao.AdminMapper">
    <resultMap id="BaseResultMap" type="cn.jaly.admin.entity.Admin">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="encrypt" jdbcType="VARCHAR" property="encrypt"/>
        <result column="last_login_ip" jdbcType="VARCHAR" property="lastLoginIp"/>
        <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="face" jdbcType="VARCHAR" property="face"/>
        <result column="card" jdbcType="VARCHAR" property="card"/>
        <result column="admin_role_id" jdbcType="INTEGER" property="adminRoleId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, user_name, password, encrypt, last_login_ip, last_login_time, email, real_name, 
    face, card, admin_role_id
  </sql>
    <select id="selectByExample" parameterType="cn.jaly.admin.entity.AdminExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from admin
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from admin
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from admin
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="cn.jaly.admin.entity.AdminExample">
        delete from admin
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.jaly.admin.entity.Admin">
    insert into admin (id, user_name, password, 
      encrypt, last_login_ip, last_login_time, 
      email, real_name, face, 
      card, admin_role_id)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{encrypt,jdbcType=VARCHAR}, #{lastLoginIp,jdbcType=VARCHAR}, #{lastLoginTime,jdbcType=TIMESTAMP}, 
      #{email,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{face,jdbcType=VARCHAR}, 
      #{card,jdbcType=VARCHAR}, #{adminRoleId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="cn.jaly.admin.entity.Admin">
        insert into admin
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="encrypt != null">
                encrypt,
            </if>
            <if test="lastLoginIp != null">
                last_login_ip,
            </if>
            <if test="lastLoginTime != null">
                last_login_time,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="realName != null">
                real_name,
            </if>
            <if test="face != null">
                face,
            </if>
            <if test="card != null">
                card,
            </if>
            <if test="adminRoleId != null">
                admin_role_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="encrypt != null">
                #{encrypt,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginIp != null">
                #{lastLoginIp,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginTime != null">
                #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                #{realName,jdbcType=VARCHAR},
            </if>
            <if test="face != null">
                #{face,jdbcType=VARCHAR},
            </if>
            <if test="card != null">
                #{card,jdbcType=VARCHAR},
            </if>
            <if test="adminRoleId != null">
                #{adminRoleId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.jaly.admin.entity.AdminExample" resultType="java.lang.Long">
        select count(*) from admin
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update admin
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userName != null">
                user_name = #{record.userName,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.encrypt != null">
                encrypt = #{record.encrypt,jdbcType=VARCHAR},
            </if>
            <if test="record.lastLoginIp != null">
                last_login_ip = #{record.lastLoginIp,jdbcType=VARCHAR},
            </if>
            <if test="record.lastLoginTime != null">
                last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.realName != null">
                real_name = #{record.realName,jdbcType=VARCHAR},
            </if>
            <if test="record.face != null">
                face = #{record.face,jdbcType=VARCHAR},
            </if>
            <if test="record.card != null">
                card = #{record.card,jdbcType=VARCHAR},
            </if>
            <if test="record.adminRoleId != null">
                admin_role_id = #{record.adminRoleId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update admin
        set id = #{record.id,jdbcType=INTEGER},
        user_name = #{record.userName,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        encrypt = #{record.encrypt,jdbcType=VARCHAR},
        last_login_ip = #{record.lastLoginIp,jdbcType=VARCHAR},
        last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
        email = #{record.email,jdbcType=VARCHAR},
        real_name = #{record.realName,jdbcType=VARCHAR},
        face = #{record.face,jdbcType=VARCHAR},
        card = #{record.card,jdbcType=VARCHAR},
        admin_role_id = #{record.adminRoleId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.jaly.admin.entity.Admin">
        update admin
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="encrypt != null">
                encrypt = #{encrypt,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginIp != null">
                last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                real_name = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="face != null">
                face = #{face,jdbcType=VARCHAR},
            </if>
            <if test="card != null">
                card = #{card,jdbcType=VARCHAR},
            </if>
            <if test="adminRoleId != null">
                admin_role_id = #{adminRoleId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.jaly.admin.entity.Admin">
    update admin
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      encrypt = #{encrypt,jdbcType=VARCHAR},
      last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      email = #{email,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      face = #{face,jdbcType=VARCHAR},
      card = #{card,jdbcType=VARCHAR},
      admin_role_id = #{adminRoleId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!--自定义查询-->
    <resultMap id="WithRoleResultMap" type="cn.jaly.admin.entity.Admin" extends="BaseResultMap">
        <association property="adminRole" javaType="cn.jaly.admin.entity.AdminRole">
            <id column="id" jdbcType="INTEGER" property="id"/>
            <result column="name" jdbcType="VARCHAR" property="name"/>
            <result column="description" jdbcType="VARCHAR" property="description"/>
            <result column="list_order" jdbcType="SMALLINT" property="listOrder"/>
            <result column="disabled" jdbcType="BIT" property="disabled"/>
        </association>
    </resultMap>
    <sql id="With_Role_Column_List">
        a.id, a.user_name, a.password, a.encrypt, a.last_login_ip, a.last_login_time, a.email, a.real_name,
        a.face, a.card, a.admin_role_id,
        r.id, r.name, r.description, r.list_order, r.disabled
    </sql>
    <select id="selectByExampleWithRole" parameterType="cn.jaly.admin.entity.AdminExample" resultMap="WithRoleResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="With_Role_Column_List"/>
        from admin a left join admin_role r on a.admin_role_id = r.id
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKeyWithRole" parameterType="java.lang.Integer" resultMap="WithRoleResultMap">
        select
        <include refid="With_Role_Column_List"/>
        from admin a left join admin_role r on a.admin_role_id = r.id
        where a.id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByUserNameWithRole" resultMap="WithRoleResultMap">
        select
        <include refid="With_Role_Column_List"/>
        from admin a left join admin_role r on a.admin_role_id = r.id
        where a.user_name = #{userName}
    </select>
</mapper>