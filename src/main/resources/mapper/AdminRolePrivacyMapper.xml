<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jaly.admin.dao.AdminRolePrivacyMapper">

    <cache type="org.mybatis.caches.ehcache.EhcacheCache"/>

  <resultMap id="BaseResultMap" type="cn.jaly.admin.entity.AdminRolePrivacy">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="admin_role_id" jdbcType="INTEGER" property="adminRoleId" />
    <result column="module" jdbcType="VARCHAR" property="module" />
    <result column="entity" jdbcType="VARCHAR" property="entity" />
    <result column="action" jdbcType="VARCHAR" property="action" />
    <result column="data" jdbcType="VARCHAR" property="data" />
    <result column="site_id" jdbcType="INTEGER" property="siteId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, admin_role_id, module, entity, action, data, site_id
  </sql>
  <select id="selectByExample" parameterType="cn.jaly.admin.entity.AdminRolePrivacyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from admin_role_privacy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from admin_role_privacy
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from admin_role_privacy
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jaly.admin.entity.AdminRolePrivacyExample">
    delete from admin_role_privacy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jaly.admin.entity.AdminRolePrivacy">
    insert into admin_role_privacy (id, admin_role_id, module,
      entity, action, data,
      site_id)
    values (#{id,jdbcType=INTEGER}, #{adminRoleId,jdbcType=INTEGER}, #{module,jdbcType=VARCHAR},
      #{entity,jdbcType=VARCHAR}, #{action,jdbcType=VARCHAR}, #{data,jdbcType=VARCHAR},
      #{siteId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.jaly.admin.entity.AdminRolePrivacy">
    insert into admin_role_privacy
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="adminRoleId != null">
        admin_role_id,
      </if>
      <if test="module != null">
        module,
      </if>
      <if test="entity != null">
        entity,
      </if>
      <if test="action != null">
        action,
      </if>
      <if test="data != null">
        data,
      </if>
      <if test="siteId != null">
        site_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="adminRoleId != null">
        #{adminRoleId,jdbcType=INTEGER},
      </if>
      <if test="module != null">
        #{module,jdbcType=VARCHAR},
      </if>
      <if test="entity != null">
        #{entity,jdbcType=VARCHAR},
      </if>
      <if test="action != null">
        #{action,jdbcType=VARCHAR},
      </if>
      <if test="data != null">
        #{data,jdbcType=VARCHAR},
      </if>
      <if test="siteId != null">
        #{siteId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jaly.admin.entity.AdminRolePrivacyExample" resultType="java.lang.Long">
    select count(*) from admin_role_privacy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update admin_role_privacy
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.adminRoleId != null">
        admin_role_id = #{record.adminRoleId,jdbcType=INTEGER},
      </if>
      <if test="record.module != null">
        module = #{record.module,jdbcType=VARCHAR},
      </if>
      <if test="record.entity != null">
        entity = #{record.entity,jdbcType=VARCHAR},
      </if>
      <if test="record.action != null">
        action = #{record.action,jdbcType=VARCHAR},
      </if>
      <if test="record.data != null">
        data = #{record.data,jdbcType=VARCHAR},
      </if>
      <if test="record.siteId != null">
        site_id = #{record.siteId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update admin_role_privacy
    set id = #{record.id,jdbcType=INTEGER},
      admin_role_id = #{record.adminRoleId,jdbcType=INTEGER},
      module = #{record.module,jdbcType=VARCHAR},
      entity = #{record.entity,jdbcType=VARCHAR},
      action = #{record.action,jdbcType=VARCHAR},
      data = #{record.data,jdbcType=VARCHAR},
      site_id = #{record.siteId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jaly.admin.entity.AdminRolePrivacy">
    update admin_role_privacy
    <set>
      <if test="adminRoleId != null">
        admin_role_id = #{adminRoleId,jdbcType=INTEGER},
      </if>
      <if test="module != null">
        module = #{module,jdbcType=VARCHAR},
      </if>
      <if test="entity != null">
        entity = #{entity,jdbcType=VARCHAR},
      </if>
      <if test="action != null">
        action = #{action,jdbcType=VARCHAR},
      </if>
      <if test="data != null">
        data = #{data,jdbcType=VARCHAR},
      </if>
      <if test="siteId != null">
        site_id = #{siteId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jaly.admin.entity.AdminRolePrivacy">
    update admin_role_privacy
    set admin_role_id = #{adminRoleId,jdbcType=INTEGER},
      module = #{module,jdbcType=VARCHAR},
      entity = #{entity,jdbcType=VARCHAR},
      action = #{action,jdbcType=VARCHAR},
      data = #{data,jdbcType=VARCHAR},
      site_id = #{siteId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--自定义-->
  <insert id="batchInsert" parameterType="cn.jaly.admin.entity.AdminRolePrivacy">
    insert into admin_role_privacy (id, admin_role_id, module, entity, action, data, site_id)
    values
    <foreach collection ="records" item="p" separator =",">
      (#{p.id,jdbcType=INTEGER}, #{p.adminRoleId,jdbcType=INTEGER}, #{p.module,jdbcType=VARCHAR},
      #{p.entity,jdbcType=VARCHAR}, #{p.action,jdbcType=VARCHAR}, #{p.data,jdbcType=VARCHAR}, #{p.siteId,jdbcType=INTEGER})
    </foreach >
  </insert>
  <resultMap id="WithRoleResultMap" type="cn.jaly.admin.entity.AdminRolePrivacy" extends="BaseResultMap">
    <association property="adminRole" javaType="cn.jaly.admin.entity.AdminRole">
      <id column="id" jdbcType="INTEGER" property="id" />
      <result column="name" jdbcType="VARCHAR" property="name" />
      <result column="description" jdbcType="VARCHAR" property="description" />
      <result column="list_order" jdbcType="SMALLINT" property="listOrder" />
      <result column="disabled" jdbcType="BIT" property="disabled" />
    </association>
  </resultMap>
  <sql id="With_Role_Column_List">
    p.id, p.admin_role_id, p.module, p.entity, p.action, p.data, p.site_id,
    r.id, r.name, r.description, r.list_order, r.disabled
  </sql>
  <select id="selectByExampleWithRole" parameterType="cn.jaly.admin.entity.AdminRolePrivacyExample" resultMap="WithRoleResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="With_Role_Column_List" />
    from admin_role_privacy p left join admin_role r on p.admin_role_id = r.id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectAsMenu" resultMap="BaseResultMap">
    select * from admin_role_privacy
    where site_id = #{siteId,jdbcType=INTEGER}
    and admin_role_id = #{roleId,jdbcType=INTEGER}
    and module = #{module}
    and entity = #{entity}
    and action = #{action}
  </select>
  <select id="selectOwnSiteIdsByRoleId" resultType="java.lang.Integer">
    select distinct site_id
    from admin_role_privacy
    where admin_role_id = #{roleId,jdbcType=INTEGER};
  </select>
</mapper>