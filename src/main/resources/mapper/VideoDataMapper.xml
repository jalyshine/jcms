<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jaly.content.dao.VideoDataMapper">
  <resultMap id="BaseResultMap" type="cn.jaly.content.entity.VideoData">
    <id column="video_id" jdbcType="INTEGER" property="videoId" />
    <result column="allow_comment" jdbcType="BIT" property="allowComment" />
    <result column="allow_groups" jdbcType="VARCHAR" property="allowGroups" />
    <result column="hits" jdbcType="INTEGER" property="hits" />
    <result column="read_point" jdbcType="INTEGER" property="readPoint" />
    <result column="recommend_positions" jdbcType="VARCHAR" property="recommendPositions" />
    <result column="copy_from_id" jdbcType="INTEGER" property="copyFromId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.jaly.content.entity.VideoData">
    <result column="items" jdbcType="LONGVARCHAR" property="items" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    video_id, allow_comment, allow_groups, hits, read_point, recommend_positions, copy_from_id
  </sql>
  <sql id="Blob_Column_List">
    items
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.jaly.content.entity.VideoDataExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from video_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.jaly.content.entity.VideoDataExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from video_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from video_data
    where video_id = #{videoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from video_data
    where video_id = #{videoId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jaly.content.entity.VideoDataExample">
    delete from video_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jaly.content.entity.VideoData">
    insert into video_data (video_id, allow_comment, allow_groups, 
      hits, read_point, recommend_positions, 
      copy_from_id, items)
    values (#{videoId,jdbcType=INTEGER}, #{allowComment,jdbcType=BIT}, #{allowGroups,jdbcType=VARCHAR}, 
      #{hits,jdbcType=INTEGER}, #{readPoint,jdbcType=INTEGER}, #{recommendPositions,jdbcType=VARCHAR}, 
      #{copyFromId,jdbcType=INTEGER}, #{items,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.jaly.content.entity.VideoData">
    insert into video_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="videoId != null">
        video_id,
      </if>
      <if test="allowComment != null">
        allow_comment,
      </if>
      <if test="allowGroups != null">
        allow_groups,
      </if>
      <if test="hits != null">
        hits,
      </if>
      <if test="readPoint != null">
        read_point,
      </if>
      <if test="recommendPositions != null">
        recommend_positions,
      </if>
      <if test="copyFromId != null">
        copy_from_id,
      </if>
      <if test="items != null">
        items,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="videoId != null">
        #{videoId,jdbcType=INTEGER},
      </if>
      <if test="allowComment != null">
        #{allowComment,jdbcType=BIT},
      </if>
      <if test="allowGroups != null">
        #{allowGroups,jdbcType=VARCHAR},
      </if>
      <if test="hits != null">
        #{hits,jdbcType=INTEGER},
      </if>
      <if test="readPoint != null">
        #{readPoint,jdbcType=INTEGER},
      </if>
      <if test="recommendPositions != null">
        #{recommendPositions,jdbcType=VARCHAR},
      </if>
      <if test="copyFromId != null">
        #{copyFromId,jdbcType=INTEGER},
      </if>
      <if test="items != null">
        #{items,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jaly.content.entity.VideoDataExample" resultType="java.lang.Long">
    select count(*) from video_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update video_data
    <set>
      <if test="record.videoId != null">
        video_id = #{record.videoId,jdbcType=INTEGER},
      </if>
      <if test="record.allowComment != null">
        allow_comment = #{record.allowComment,jdbcType=BIT},
      </if>
      <if test="record.allowGroups != null">
        allow_groups = #{record.allowGroups,jdbcType=VARCHAR},
      </if>
      <if test="record.hits != null">
        hits = #{record.hits,jdbcType=INTEGER},
      </if>
      <if test="record.readPoint != null">
        read_point = #{record.readPoint,jdbcType=INTEGER},
      </if>
      <if test="record.recommendPositions != null">
        recommend_positions = #{record.recommendPositions,jdbcType=VARCHAR},
      </if>
      <if test="record.copyFromId != null">
        copy_from_id = #{record.copyFromId,jdbcType=INTEGER},
      </if>
      <if test="record.items != null">
        items = #{record.items,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update video_data
    set video_id = #{record.videoId,jdbcType=INTEGER},
      allow_comment = #{record.allowComment,jdbcType=BIT},
      allow_groups = #{record.allowGroups,jdbcType=VARCHAR},
      hits = #{record.hits,jdbcType=INTEGER},
      read_point = #{record.readPoint,jdbcType=INTEGER},
      recommend_positions = #{record.recommendPositions,jdbcType=VARCHAR},
      copy_from_id = #{record.copyFromId,jdbcType=INTEGER},
      items = #{record.items,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update video_data
    set video_id = #{record.videoId,jdbcType=INTEGER},
      allow_comment = #{record.allowComment,jdbcType=BIT},
      allow_groups = #{record.allowGroups,jdbcType=VARCHAR},
      hits = #{record.hits,jdbcType=INTEGER},
      read_point = #{record.readPoint,jdbcType=INTEGER},
      recommend_positions = #{record.recommendPositions,jdbcType=VARCHAR},
      copy_from_id = #{record.copyFromId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jaly.content.entity.VideoData">
    update video_data
    <set>
      <if test="allowComment != null">
        allow_comment = #{allowComment,jdbcType=BIT},
      </if>
      <if test="allowGroups != null">
        allow_groups = #{allowGroups,jdbcType=VARCHAR},
      </if>
      <if test="hits != null">
        hits = #{hits,jdbcType=INTEGER},
      </if>
      <if test="readPoint != null">
        read_point = #{readPoint,jdbcType=INTEGER},
      </if>
      <if test="recommendPositions != null">
        recommend_positions = #{recommendPositions,jdbcType=VARCHAR},
      </if>
      <if test="copyFromId != null">
        copy_from_id = #{copyFromId,jdbcType=INTEGER},
      </if>
      <if test="items != null">
        items = #{items,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where video_id = #{videoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.jaly.content.entity.VideoData">
    update video_data
    set allow_comment = #{allowComment,jdbcType=BIT},
      allow_groups = #{allowGroups,jdbcType=VARCHAR},
      hits = #{hits,jdbcType=INTEGER},
      read_point = #{readPoint,jdbcType=INTEGER},
      recommend_positions = #{recommendPositions,jdbcType=VARCHAR},
      copy_from_id = #{copyFromId,jdbcType=INTEGER},
      items = #{items,jdbcType=LONGVARCHAR}
    where video_id = #{videoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jaly.content.entity.VideoData">
    update video_data
    set allow_comment = #{allowComment,jdbcType=BIT},
      allow_groups = #{allowGroups,jdbcType=VARCHAR},
      hits = #{hits,jdbcType=INTEGER},
      read_point = #{readPoint,jdbcType=INTEGER},
      recommend_positions = #{recommendPositions,jdbcType=VARCHAR},
      copy_from_id = #{copyFromId,jdbcType=INTEGER}
    where video_id = #{videoId,jdbcType=INTEGER}
  </update>
</mapper>