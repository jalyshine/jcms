<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jaly.content.dao.CategoryPrivacyMapper">
  <resultMap id="BaseResultMap" type="cn.jaly.content.entity.CategoryPrivacy">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="admin_role_id" jdbcType="INTEGER" property="adminRoleId" />
    <result column="action" jdbcType="VARCHAR" property="action" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, category_id, admin_role_id, action
  </sql>
  <select id="selectByExample" parameterType="cn.jaly.content.entity.CategoryPrivacyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from category_privacy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from category_privacy
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from category_privacy
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jaly.content.entity.CategoryPrivacyExample">
    delete from category_privacy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jaly.content.entity.CategoryPrivacy">
    insert into category_privacy (id, category_id, admin_role_id, 
      action)
    values (#{id,jdbcType=INTEGER}, #{categoryId,jdbcType=INTEGER}, #{adminRoleId,jdbcType=INTEGER}, 
      #{action,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.jaly.content.entity.CategoryPrivacy">
    insert into category_privacy
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="adminRoleId != null">
        admin_role_id,
      </if>
      <if test="action != null">
        action,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="adminRoleId != null">
        #{adminRoleId,jdbcType=INTEGER},
      </if>
      <if test="action != null">
        #{action,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jaly.content.entity.CategoryPrivacyExample" resultType="java.lang.Long">
    select count(*) from category_privacy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update category_privacy
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.adminRoleId != null">
        admin_role_id = #{record.adminRoleId,jdbcType=INTEGER},
      </if>
      <if test="record.action != null">
        action = #{record.action,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update category_privacy
    set id = #{record.id,jdbcType=INTEGER},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      admin_role_id = #{record.adminRoleId,jdbcType=INTEGER},
      action = #{record.action,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jaly.content.entity.CategoryPrivacy">
    update category_privacy
    <set>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="adminRoleId != null">
        admin_role_id = #{adminRoleId,jdbcType=INTEGER},
      </if>
      <if test="action != null">
        action = #{action,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jaly.content.entity.CategoryPrivacy">
    update category_privacy
    set category_id = #{categoryId,jdbcType=INTEGER},
      admin_role_id = #{adminRoleId,jdbcType=INTEGER},
      action = #{action,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--自定义-->
  <insert id="batchInsert">
    insert into category_privacy (id, category_id, admin_role_id, action)
    VALUES
    <foreach collection ="records" item="p" separator =",">
      (#{p.id,jdbcType=INTEGER}, #{p.categoryId,jdbcType=INTEGER}, #{p.adminRoleId,jdbcType=INTEGER},
      #{p.action,jdbcType=VARCHAR})
    </foreach >
  </insert>
</mapper>