<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jaly.comment.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="cn.jaly.comment.entity.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="host" jdbcType="VARCHAR" property="host" />
    <result column="total" jdbcType="INTEGER" property="total" />
    <result column="square" jdbcType="INTEGER" property="square" />
    <result column="against" jdbcType="INTEGER" property="against" />
    <result column="neutral" jdbcType="INTEGER" property="neutral" />
    <result column="display_type" jdbcType="TINYINT" property="displayType" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="site_id" jdbcType="INTEGER" property="siteId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, host, total, square, against, neutral, display_type, parent_id, update_time, 
    site_id
  </sql>
  <select id="selectByExample" parameterType="cn.jaly.comment.entity.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jaly.comment.entity.CommentExample">
    delete from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="cn.jaly.comment.entity.Comment">
    insert into comment (id, title, host, 
      total, square, against, 
      neutral, display_type, parent_id, 
      update_time, site_id)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{host,jdbcType=VARCHAR}, 
      #{total,jdbcType=INTEGER}, #{square,jdbcType=INTEGER}, #{against,jdbcType=INTEGER}, 
      #{neutral,jdbcType=INTEGER}, #{displayType,jdbcType=TINYINT}, #{parentId,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{siteId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="cn.jaly.comment.entity.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="host != null">
        host,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="square != null">
        square,
      </if>
      <if test="against != null">
        against,
      </if>
      <if test="neutral != null">
        neutral,
      </if>
      <if test="displayType != null">
        display_type,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="siteId != null">
        site_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="host != null">
        #{host,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        #{total,jdbcType=INTEGER},
      </if>
      <if test="square != null">
        #{square,jdbcType=INTEGER},
      </if>
      <if test="against != null">
        #{against,jdbcType=INTEGER},
      </if>
      <if test="neutral != null">
        #{neutral,jdbcType=INTEGER},
      </if>
      <if test="displayType != null">
        #{displayType,jdbcType=TINYINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="siteId != null">
        #{siteId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jaly.comment.entity.CommentExample" resultType="java.lang.Long">
    select count(*) from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.host != null">
        host = #{record.host,jdbcType=VARCHAR},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=INTEGER},
      </if>
      <if test="record.square != null">
        square = #{record.square,jdbcType=INTEGER},
      </if>
      <if test="record.against != null">
        against = #{record.against,jdbcType=INTEGER},
      </if>
      <if test="record.neutral != null">
        neutral = #{record.neutral,jdbcType=INTEGER},
      </if>
      <if test="record.displayType != null">
        display_type = #{record.displayType,jdbcType=TINYINT},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.siteId != null">
        site_id = #{record.siteId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comment
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      host = #{record.host,jdbcType=VARCHAR},
      total = #{record.total,jdbcType=INTEGER},
      square = #{record.square,jdbcType=INTEGER},
      against = #{record.against,jdbcType=INTEGER},
      neutral = #{record.neutral,jdbcType=INTEGER},
      display_type = #{record.displayType,jdbcType=TINYINT},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      site_id = #{record.siteId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jaly.comment.entity.Comment">
    update comment
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="host != null">
        host = #{host,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=INTEGER},
      </if>
      <if test="square != null">
        square = #{square,jdbcType=INTEGER},
      </if>
      <if test="against != null">
        against = #{against,jdbcType=INTEGER},
      </if>
      <if test="neutral != null">
        neutral = #{neutral,jdbcType=INTEGER},
      </if>
      <if test="displayType != null">
        display_type = #{displayType,jdbcType=TINYINT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="siteId != null">
        site_id = #{siteId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jaly.comment.entity.Comment">
    update comment
    set title = #{title,jdbcType=VARCHAR},
      host = #{host,jdbcType=VARCHAR},
      total = #{total,jdbcType=INTEGER},
      square = #{square,jdbcType=INTEGER},
      against = #{against,jdbcType=INTEGER},
      neutral = #{neutral,jdbcType=INTEGER},
      display_type = #{displayType,jdbcType=TINYINT},
      parent_id = #{parentId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      site_id = #{siteId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!--自定义-->
    <resultMap id="WithDataResultMap" type="cn.jaly.comment.entity.Comment" extends="BaseResultMap">
        <association property="commentData" javaType="cn.jaly.comment.entity.CommentData">
            <id column="comment_id" jdbcType="INTEGER" property="commentId" />
            <result column="user_id" jdbcType="INTEGER" property="userId" />
            <result column="user_name" jdbcType="VARCHAR" property="userName" />
            <result column="user_ip" jdbcType="VARCHAR" property="userIp" />
            <result column="status" jdbcType="TINYINT" property="status" />
        </association>
    </resultMap>
    <sql id="With_Data_Column_List">
        id, title, host, total, square, against, neutral, display_type, parent_id, update_time,
        site_id, comment_id, user_id, user_name, user_ip, status, content
    </sql>
    <select id="queryForList" resultMap="WithDataResultMap">
        select
        <include refid="With_Data_Column_List" />
        from comment c left join comment_data d on c.id = d.comment_id
        where site_id = #{siteId, jdbcType=INTEGER}
        <if test="status != null">
            and status = #{status, jdbcType=TINYINT}
        </if>
        <if test="startTime != null">
            and update_time &gt;= #{startTime,jdbcType=TIMESTAMP}
        </if>
        <if test="endTime != null">
            and update_time &lt;= #{endTime,jdbcType=TIMESTAMP}
        </if>
        <if test="keyword != null and keyword != ''">
            and (content like #{keyword})
        </if>
        <if test="order != null and order != ''">
            order by ${order}
        </if>
    </select>
    <select id="selectByPrimaryKeyWithData" parameterType="java.lang.Integer" resultMap="WithDataResultMap">
        select
        <include refid="With_Data_Column_List" />
        from comment c left join comment_data d on c.id = d.comment_id
        where id = #{id,jdbcType=INTEGER}
    </select>
</mapper>